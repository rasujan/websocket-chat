{"ast":null,"code":"var _jsxFileName = \"/home/sujan/Development/websockets-chat/webSocketClient/src/index.js\";\nimport ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as w3WebSocket } from \"websocket\";\nimport { Input } from \"antd\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new w3WebSocket(\"ws://127.0.0.1:8001\");\nconst {\n  Search\n} = Input;\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      userName: \"\",\n      isLoggedIn: false,\n      messages: []\n    };\n\n    this.handleLogin = value => {\n      this.setState({\n        userName: value,\n        isLoggedIn: true\n      });\n    };\n\n    this.handleSendMessage = value => {\n      client.send(JSON.stringify({\n        type: \"message\",\n        message: value,\n        user: this.state.userName\n      }));\n    };\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log(\"websocket client connected 🤝 \");\n    };\n\n    client.onclose = () => {\n      console.log(\"websocket client connection close 🚪  \");\n    };\n\n    client.message = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log(`got reply ${dataFromServer}`);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: this.state.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"Enter username\",\n          enterButton: \"Login\",\n          size: \"large\",\n          onSearch: value => this.handleLogin(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/sujan/Development/websockets-chat/webSocketClient/src/index.js"],"names":["ReactDOM","React","Component","w3cwebsocket","w3WebSocket","Input","client","Search","App","state","userName","isLoggedIn","messages","handleLogin","value","setState","handleSendMessage","send","JSON","stringify","type","message","user","componentDidMount","onopen","console","log","onclose","dataFromServer","parse","data","render","document","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAY,IAAIC,WAAzB,QAA4C,WAA5C;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,OAAO,aAAP;AACA,OAAO,oBAAP;;AAEA,MAAMC,MAAM,GAAG,IAAIF,WAAJ,CAAgB,qBAAhB,CAAf;AAEA,MAAM;AAAEG,EAAAA;AAAF,IAAaF,KAAnB;AAEA,eAAe,MAAMG,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCO,KADyC,GACjC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,UAAU,EAAE,KAFN;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADiC;;AAAA,SAOzCC,WAPyC,GAO1BC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAEI,KADE;AAEZH,QAAAA,UAAU,EAAE;AAFA,OAAd;AAID,KAZwC;;AAAA,SAczCK,iBAdyC,GAcpBF,KAAD,IAAW;AAC7BR,MAAAA,MAAM,CAACW,IAAP,CACEC,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,IAAI,EAAE,SADO;AAEbC,QAAAA,OAAO,EAAEP,KAFI;AAGbQ,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC;AAHJ,OAAf,CADF;AAOD,KAtBwC;AAAA;;AAwBzCa,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,MAAM,CAACkB,MAAP,GAAgB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,KAFD;;AAIApB,IAAAA,MAAM,CAACqB,OAAP,GAAiB,MAAM;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,KAFD;;AAIApB,IAAAA,MAAM,CAACe,OAAP,GAAkBA,OAAD,IAAa;AAC5B,YAAMO,cAAc,GAAGV,IAAI,CAACW,KAAL,CAAWR,OAAO,CAACS,IAAnB,CAAvB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYE,cAAe,EAAxC;AACD,KAHD;AAID;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACG,KAAKtB,KAAL,CAAWE,UAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,WAAW,EAAC,gBADd;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB;AAJvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAxDwC;AA2D3Cd,QAAQ,CAAC+B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as w3WebSocket } from \"websocket\";\nimport { Input } from \"antd\";\n\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\n\nconst client = new w3WebSocket(\"ws://127.0.0.1:8001\");\n\nconst { Search } = Input;\n\nexport default class App extends Component {\n  state = {\n    userName: \"\",\n    isLoggedIn: false,\n    messages: [],\n  };\n\n  handleLogin = (value) => {\n    this.setState({\n      userName: value,\n      isLoggedIn: true,\n    });\n  };\n\n  handleSendMessage = (value) => {\n    client.send(\n      JSON.stringify({\n        type: \"message\",\n        message: value,\n        user: this.state.userName,\n      })\n    );\n  };\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log(\"websocket client connected 🤝 \");\n    };\n\n    client.onclose = () => {\n      console.log(\"websocket client connection close 🚪  \");\n    };\n\n    client.message = (message) => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log(`got reply ${dataFromServer}`);\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        {this.state.isLoggedIn ? (\n          <div> </div>\n        ) : (\n          <div className=\"login\">\n            <Search\n              placeholder=\"Enter username\"\n              enterButton=\"Login\"\n              size=\"large\"\n              onSearch={(value) => this.handleLogin(value)}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}